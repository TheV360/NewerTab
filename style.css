@import url("https://fonts.googleapis.com/css?family=Roboto:300,400");

/* Reset Styles */
* {
	border: 0;
	padding: 0;
	margin: 0;
	outline: 0;
	
	box-sizing: border-box;
	/*border-top: 1px solid red;*/
}
html, body {
	width: 100%;
	min-height: 100%;
	
	color: white;
	background-color: black;
	
	font-family: "Roboto", sans-serif;
	font-weight: 300;
	
	-webkit-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
}

::placeholder {
	opacity: 1;
}

::-moz-selection {
	color: var(--text-color);
	background-color: var(--alt-color);
}

::selection {
	color: var(--text-color);
	background-color: var(--alt-color);
}

/* Variables, oh man! */
:root {
	--content-size-width: 44rem;
	--content-size-height: 17rem;
	--content-size-padding: 5rem;
	
	--icon-color: white;
	--icon-size: 7rem;
	
	--border-radius: .25rem;
}
:root.dark {
	--text-color: white;
	--alt-color: black;
	--blur-color: rgba(255, 255, 255, .05);
}
:root.light {
	--text-color: white;
	--alt-color: black;
	--blur-color: rgba(255, 255, 255, .25);
}

/* Background */
body {
	position: fixed;
	top: 0; left: 0;
	
	display: flex;
	justify-content: center;
	align-items: center;
	
	width: 100%;
	height: 100%;
	
	background-repeat: no-repeat;
	background-position: center;
	background-attachment: fixed;
	background-size: cover;
}

/* Glass style */
div.glass::before {
	content: "";
	position: absolute;
	
	width: calc(var(--content-size-width) + var(--content-size-padding));
	height: calc(var(--content-size-height) + var(--content-size-padding));
	
	top: calc((0rem - var(--content-size-padding)) / 2);
	left: calc((0rem - var(--content-size-padding)) / 2);
	
	background: inherit;
	box-shadow: inset 0 0 0 calc(var(--content-size-width) + var(--content-size-height)) var(--blur-color);
	filter: blur(.5rem);
}
div.glass {
	position: absolute;
	
	width: var(--content-size-width);
	height: var(--content-size-height);
	
	background: inherit;
	overflow: hidden;
	
	border-radius: var(--border-radius);
}

/* Content style */
div#content {
	padding: 1rem;
	
	position: absolute;
	top: 0; left: 0;
	
	width: 100%;
	height: 100%;
	
	color: var(--text-color);
	
	z-index: 1;
}
div#content > :not(:last-child) {
	margin-bottom: 1rem;
}

/* Clock style */
div#clock {
	width: 100%;
	height: 4rem;
	
	font-size: 3.5rem;
	line-height: 4rem;
	text-align: center;
}
span#blink.on {
	opacity: 1;
}
span#blink.off {
	opacity: 0;
}

/* Search style */
div#search, input#searchbox {
	width: 100%;
	height: 2rem;
	
	font-size: 1rem;
}
input#searchbox {
	padding: .5rem;
	
	border-radius: var(--border-radius);
	
	font-weight: 400;
	text-align: center;
	
	color: var(--text-color);
	background-color: rgba(255, 255, 255, .25);
	
	-webkit-user-select: text;
	-moz-user-select: text;
	-ms-user-select: text;
	user-select: text;
}
input#searchbox.date {
	background-color: transparent;
}
input#searchbox:hover {
	background-color: rgba(255, 255, 255, .25);
}
input#searchbox:focus, input#searchbox.contextopen {
	color: var(--alt-color);
	background-color: white;
	text-align: left;
}
input#searchbox::placeholder {
	color: var(--text-color);
}
input#searchbox:focus::placeholder, input#searchbox.contextopen::placeholder {
	color: var(--alt-color);
}
input#searchbox.date:focus::placeholder, input#searchbox.date.contextopen::placeholder {
	color: transparent;
}

/* Icon grid */
/* FoldThis */
div#icons, div.iconbox {
	display: grid;
}
div#icons {
	grid-template-columns: repeat(6, 1fr);
	grid-column-gap: 0;
}
div.iconbox, a.icon {
	width: var(--icon-size);
	height: var(--icon-size);
	
	border-radius: var(--border-radius);
}
a.icon {
	padding: .5rem;
}
a.icon:hover, a.icon.contextopen {
	padding: 0;
	
	background-color: #1f1f1f7f;
	fill: #1f1f1f7f;
}
/* FoldThat */

/* Right Click Menu */
ul.contextlist {
	display: block;
	position: absolute;
	list-style-type: none;
	
	max-width: 20rem;
	max-height: 75vh;
	
	padding: 6px 0;
	border: 1px solid rgb(191, 191, 191, .5);
	
	color: black;
	background-color: white;
	
	border-radius: var(--border-radius);
	
	font-size: 1rem;
	
	z-index: 100;
	
	overflow: auto;
}
ul.contextlist li {
	padding: .5rem;
	
	color: black;
	background-color: transparent;
	
	font-weight: 300;
	
	z-index: 101;
}
ul.contextlist li.contextdisabled {
	color: #9f9f9f;
	
	font-weight: 400;
}
ul.contextlist li:hover {
	background-color: #cfcfcf;
}
ul.contextlist > :not(:last-child) {
	border-bottom: 1px solid #efefef;
}
ul.contextlist hr {
	border: 0;
	height: .25rem;
	
	background-color: #f7f7f7;
}
ul.contextlist img {
	width: 100%;
}

@keyframes fadeIn {
	from {
		opacity: 0;
	}
	to {
		opacity: 1;
	}
}

.dummy {
	display: block;
	position: fixed;
	
	width: 100%;
	height: 100%;
	
	z-index: 99;
	
	transform-origin: center;
}

@keyframes sine {
	from {transform: translateX(calc(-1 * var(--anim-sine)));}
	to {transform: translateX(var(--anim-sine));}
}
@keyframes cosine {
	from {transform: translateY(calc(-1 * var(--anim-cosine)));}
	to {transform: translateY(var(--anim-cosine));}
}
@keyframes wavy {
	from {transform: rotate(calc(-1 * var(--anim-wavy)));}
	to {transform: rotate(var(--anim-wavy));}
}
@keyframes pulse {
	from {transform: scale(calc(1 + calc(-1 * var(--anim-pulse))));}
	to {transform: scale(calc(1 + var(--anim-pulse)));}
}
@keyframes pulse {
	from {transform: scale(calc(1 + calc(-1 * var(--anim-pulse))));}
	to {transform: scale(calc(1 + var(--anim-pulse)));}
}
/*@keyframes mess {
	from {transform: rotateX(calc(-1 * var(--anim-mess))) rotateY(calc(.1 * var(--anim-mess)));}
	to {transform: rotateX(calc(.1 * var(--anim-mess))) rotateY(calc(-1 * var(--anim-mess)));}
}*/

/* SVG trash */
a.icon svg {
	width: 100%;
	height: 100%;
	padding: .75rem;
}

/* FoldThis */
	.svg-ii { stroke: inherit; fill: inherit; }
	.svg-tt { stroke: transparent; fill: transparent; }
	.svg-if, .svg-fi { stroke: inherit; fill: var(--icon-color); }
	.svg-si, .svg-is { stroke: var(--icon-color); fill: inherit; }
	.svg-tf, .svg-ft { stroke: transparent; fill: var(--icon-color); }
	.svg-st, .svg-ts { stroke: var(--icon-color); fill: transparent; }
	.svg-sf, .svg-fs { stroke: var(--icon-color); fill: var(--icon-color); }
	.svg-it { stroke: inherit; fill: transparent; }
	.svg-ti { stroke: transparent; fill: inherit; }

	.icon.youtube:hover { background-color: #ff0000; fill: #ff0000; }
	.icon.twitter:hover { background-color: #1da1f2; fill: #1da1f2; }
	.icon.reddit:hover { background-color: #ff4500; fill: #ff4500; }
	.icon.tumblr:hover { background-color: #36465d; fill: #36465d; }
	.icon.smilebasic-source:hover { background-color: #009688; fill: #009688; }
	.icon.github:hover { background-color: #191717; fill: #191717; }
/* FoldThat */

/* Old responsive design code */
@media (orientation: portrait) {
	@media (max-width: 368px), (max-height: 384px) {
		html {
			font-size: calc(100vmin / 24);
		}
	}
	
	:root {
		--content-size-width: 23rem;
		--content-size-height: 24rem;
	}
	
	div#icons {
		grid-template-columns: repeat(3, 1fr);
	}
}

@media (orientation: landscape) {
	@media (max-width: 704px), (max-height: 272px) {
		html {
			font-size: calc(100vmin / 44);
		}
	}
	
	:root {
		--content-size-width: 44rem;
		--content-size-height: 17rem;
	}
	
	div#icons {
		grid-template-columns: repeat(6, 1fr);
	}
}
